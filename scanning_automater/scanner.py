'''
port scanning automation tool used on the command line
1) run a port scan on all ports
input: ip address
output:
    a) list of open ports to scan further 
    b) list of filtered ports to scan further to use
2) run an nmap aggressive scan against ports found to use
input:  list of open ports
output:
    a) print dictionary of results (i.e. port : [service, version, vulns])
    b) list of versions to use
3) use searchsploit to find vulnerabilities based on version used
input: list of versions 
output: print dictionary of possible vulnerabilities (i.e. version : [vuln1, ...])
'''
import sys, os, re


def allPortScan(ip):
    ''' run an nmap TCP port scan on all ports for given ip address '''


def aggressivePortScan(ip, ports):
    ''' run an aggressive (-A) port scan on open ports list for given ip address '''


def searchsploitLookup(versions):
    ''' search for vulnerabilities using searchsploit given versions list '''



if __name__ == "__main__":
    if len(sys.argv) == 2:
        # if arg1 is present then check if IP address
        # TODO 
        print(sys.argv[1])
    
    else:
        # else print usage 
        usage = 'Usage: %s [ip_address]' % (sys.argv[0])
        print(usage)
